# Starter pipeline
# This pipeline will trigger on every push to the repository.
# Modify the trigger to match your needs.

trigger:
  branches:
    include:
      - '*'  # This will trigger the pipeline for any branch push.

pool:
  vmImage: ubuntu-latest

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '<azure>'
              backendAzureRmResourceGroupName: $(bkendrg)
              backendAzureRmStorageAccountName: $(bkendstrge)
              backendAzureRmContainerName: $(bkendcont)
              backendAzureRmKey: $(bkendkey)

          - task: TerraformTaskV4@4
            displayName: validate
            inputs:
              provider: 'azurerm'
              command: 'validate'

  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
           - task: TerraformInstaller@1
             displayName: tfinstall
             inputs:
               terraformVersion: 'latest'

           - task: TerraformTaskV4@4
             displayName: init
             inputs:
               provider: 'azurerm'
               command: 'init'
               backendServiceArm: '<azure>'
               backendAzureRmResourceGroupName: $(bkendrg)
               backendAzureRmStorageAccountName: $(bkendstrge)
               backendAzureRmContainerName: $(bkendcont)
               backendAzureRmKey: $(bkstrgkey)

           - task: TerraformTaskV4@4
             displayName: plan
             inputs:
               provider: 'azurerm'
               command: 'plan'
               environmentServiceNameAzureRM: '<azure>'

           - task: TerraformTaskV4@4
             displayName: apply
             inputs:
               provider: 'azurerm'
               command: 'apply'
               environmentServiceNameAzureRM: '<azure>'
